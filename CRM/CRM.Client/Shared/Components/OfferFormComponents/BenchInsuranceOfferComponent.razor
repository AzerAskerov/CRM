@inherits BaseComponent

<EditForm EditContext="EditContext">
    <ObjectGraphDataAnnotationsValidator />
    <ValidationSummary></ValidationSummary>
    <div class="card-search">
        <CardComponent Header="@("Client.Beneficiary".Translate())" HeaderIconClass="">
            <ClientSearchComponent ClientSelected="@(BeneficiarySelected)" ClientFromParameter="@OfferModel.Beneficiary" ReadOnly="ReadOnly"></ClientSearchComponent>
            <ValidationMessage For="@(() => OfferModel.Beneficiary)" />
        </CardComponent>
    </div>
    <br />
    <div class="row">
        @if (DealModel?.Client?.ClientType == ClientType.Company)
        {
            <div class="col-3 form-group">
                @if (ReadOnly)
                {
                    <div class="readonly-input">
                        <span>
                            <span>@("OfferModel.CompanyActivityType".Translate())</span>
                            <strong>@OfferModel.CompanyActivityType</strong>
                        </span>
                    </div>
                }
                else
                {
                    <MatTextField @bind-Value="OfferModel.CompanyActivityType" Label="@("OfferModel.CompanyActivityType".Translate() + "*")" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                    <ValidationMessage For="@(() => OfferModel.CompanyActivityType)" />
                }
            </div>
        }

        <div class="col-3 form-group">
            @if (ReadOnly)
            {
                <div class="readonly-input">
                    <span>
                        <span>@("OfferModel.InsuredBenchAmount".Translate())</span>
                        <strong>@OfferModel.InsuredBenchAmount</strong>
                    </span>
                </div>
            }
            else
            {
                <MatTextField @bind-Value="OfferModel.InsuredBenchAmount" Label="@("OfferModel.InsuredBenchAmount".Translate())" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                <ValidationMessage For="@(() => OfferModel.InsuredBenchAmount)" />
            }
        </div>
        <div class="col-3 form-group">
            @if (ReadOnly)
            {
                <div class="readonly-input">
                    <span>
                        <span>@("OfferModel.InsuredBenchValue".Translate())</span>
                        <strong>@OfferModel.InsuredBenchValue</strong>
                    </span>
                </div>
            }
            else
            {
                <MatTextField @bind-Value="OfferModel.InsuredBenchValue" Label="@("OfferModel.InsuredBenchValue".Translate())" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                <ValidationMessage For="@(() => OfferModel.InsuredBenchValue)" />
            }
        </div>
        <div class="col-3 form-group">
            @if (ReadOnly)
            {
                <div class="readonly-input">
                    <span>
                        <span>@("OfferModel.InsurancePredmetAddress".Translate())</span>
                        <strong>@OfferModel.InsurancePredmetAddress</strong>
                    </span>
                </div>
            }
            else
            {
                <MatTextField @bind-Value="OfferModel.InsurancePredmetAddress" Label="@("OfferModel.InsurancePredmetAddress".Translate() + "*")" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                <ValidationMessage For="@(() => OfferModel.InsurancePredmetAddress)" />
            }
        </div>
        <div class="col-3 form-group">
            @if (ReadOnly)
            {
                <div class="readonly-input">
                    <span>
                        <span>@("OfferModel.AnyUsefulInfoForInsuranceCompany".Translate())</span>
                        <strong>@OfferModel.AnyUsefulInfoForInsuranceCompany</strong>
                    </span>
                </div>
            }
            else
            {

                <MatTextField @bind-Value="OfferModel.AnyUsefulInfoForInsuranceCompany" Label="@("OfferModel.AnyUsefulInfoForInsuranceCompany".Translate() + "*")" Outlined="true" Disabled="ReadOnly"></MatTextField>
                <ValidationMessage For="@(() => OfferModel.AnyUsefulInfoForInsuranceCompany)" />
            }
        </div>

        <div class="col-3 form-group">
            @if (ReadOnly)
            {
                <div class="readonly-input">
                    <span>
                        <span>@("OfferModel.InsuranceArea".Translate())</span>
                        <strong>@OfferModel.InsuranceArea</strong>
                    </span>
                </div>
            }
            else
            {
                <MatTextField @bind-Value="OfferModel.InsuranceArea" Label="@("OfferModel.InsuranceArea".Translate() + "*")" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                <ValidationMessage For="@(() => OfferModel.InsuranceArea)" />
            }
        </div>


        <div class="col-3 form-group @(ReadOnly ? "readonly-dropdown" : "")">
            <DropDownComponent ItemExpression="@(() => OfferModel.ImmovablePropertyTypeOid)" Required="true" Parent="OfferModel" OnSelected="StateHasChanged" ReadOnly="ReadOnly"></DropDownComponent>
            <ValidationMessage For="@(() => OfferModel.ImmovablePropertyTypeOid)" />
        </div>
        @if (OfferModel.ImmovablePropertyTypeOid == 2)
        {
            <div class="col-3 form-group">
                @if (ReadOnly)
                {
                    <div class="readonly-input">
                        <span>
                            <span>@("DropDown.MovablePropertyTypeOther".Translate())</span>
                            <strong>@OfferModel.MovablePropertyTypeOther</strong>
                        </span>
                    </div>
                }
                else
                {
                    <MatTextField @bind-Value="OfferModel.MovablePropertyTypeOther" Label="@("DropDown.MovablePropertyTypeOther".Translate() + "*")" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                    <ValidationMessage For="@(() => OfferModel.MovablePropertyTypeOther)" />
                }
            </div>
        }

        <div class="col-3 form-group @(ReadOnly ? "readonly-dropdown" : "")">
            <DropDownComponent Required="true" ItemExpression="@(() => OfferModel.MovablePropertyTypeOid)" Parent="OfferModel" OnSelected="StateHasChanged" ReadOnly="ReadOnly"></DropDownComponent>
            <ValidationMessage For="@(() => OfferModel.MovablePropertyTypeOid)" />
        </div>
        @if (OfferModel.MovablePropertyTypeOid == 5)
        {
            <div class="col-3 form-group">
                @if (ReadOnly)
                {
                    <div class="readonly-input">
                        <span>
                            <span>@("DropDown.ImmovablePropertyTypeOther".Translate())</span>
                            <strong>@OfferModel.ImmovablePropertyTypeOther</strong>
                        </span>
                    </div>
                }
                else
                {
                    <MatTextField @bind-Value="OfferModel.ImmovablePropertyTypeOther" Label="@("DropDown.ImmovablePropertyTypeOther".Translate() + "*")" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                    <ValidationMessage For="@(() => OfferModel.ImmovablePropertyTypeOther)" />
                }
            </div>
        }

        <div class="col-3 form-group @(ReadOnly ? "readonly-dropdown" : "")">
            <DropDownComponent ItemExpression="@(() => OfferModel.PolicyPeriodOid)" Parent="OfferModel" OnSelected="StateHasChanged" ReadOnly="ReadOnly"></DropDownComponent>
            <ValidationMessage For="@(() => OfferModel.PolicyPeriodOid)" />
        </div>
        <div class="col-3 form-group @(ReadOnly ? "readonly-dropdown" : "")">
            <DropDownComponent ItemExpression="@(() => OfferModel.CurrencyOid)" Parent="OfferModel" OnSelected="StateHasChanged" ReadOnly="ReadOnly"></DropDownComponent>
            <ValidationMessage For="@(() => OfferModel.CurrencyOid)" />
        </div>
        <div class="col-3 form-group @(ReadOnly ? "readonly-dropdown" : "")">
            <DropDownComponent ItemExpression="@(() => OfferModel.PaymentTypeOid)" Parent="OfferModel" OnSelected="StateHasChanged" ReadOnly="ReadOnly"></DropDownComponent>
            <ValidationMessage For="@(() => OfferModel.PaymentTypeOid)" />
        </div>

        <br />
        <div class="col-3 form-group">
            @if (ReadOnly)
            {
                <div class="readonly-input">
                    <span>
                        <span>@("OfferModel.SecurityAndFirefightingSystemInfo".Translate())</span>
                        <strong>@OfferModel.SecurityAndFirefightingSystemInfo</strong>
                    </span>
                </div>
            }
            else
            {
                <MatTextField @bind-Value="OfferModel.SecurityAndFirefightingSystemInfo" Label="@( "*" + "OfferModel.SecurityAndFirefightingSystemInfo".Translate())" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                <ValidationMessage For="@(() => OfferModel.SecurityAndFirefightingSystemInfo)" />
            }
        </div>


        <div class="col-12 form-group" style="max-height: 56px">
            <MatCheckbox @bind-Value="OfferModel.SpecialConditions" Label="@("OfferModel.SpecialConditions".Translate())" Outlined="true" Disabled="ReadOnly"></MatCheckbox>
        </div>

        @if (OfferModel.SpecialConditions)
        {
            <div class="col-12 form-group">
                @if (ReadOnly)
                {
                    <div class="readonly-input">
                        <span>
                            <span>@("OfferModel.SpecialConditionsYes".Translate())</span>
                            <strong>@OfferModel.SpecialConditionsYes</strong>
                        </span>
                    </div>
                }
                else
                {
                    <MatTextField @bind-Value="OfferModel.SpecialConditionsYes" Label="@("OfferModel.SpecialConditionsYes".Translate() + "*")" Outlined="true" Disabled="ReadOnly"></MatTextField>
                    <ValidationMessage For="@(() => OfferModel.SpecialConditionsYes)" />
                }
            </div>
        }

        <div class="col-12 form-group" style="max-height: 56px">
            <MatCheckbox @bind-Value="OfferModel.IsRenew" Label="@("OfferModel.IsRenew".Translate())" Outlined="true" Disabled="ReadOnly"></MatCheckbox>
        </div>
        @if (OfferModel.IsRenew)
        {
            <div class="col-12 form-group">
                @if (ReadOnly)
                {
                    <div class="readonly-input">
                        <span>
                            <span>@("PolicyNumber".Translate())</span>
                            <strong>@OfferModel.ExistingPolicyNumber</strong>
                        </span>
                    </div>
                }
                else
                {
                    <MatTextField @bind-Value="OfferModel.ExistingPolicyNumber" Label="@("PolicyNumber".Translate() + "*")" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                    <ValidationMessage For="@(() => OfferModel.ExistingPolicyNumber)" />
                }
            </div>
        }

        <div class="col-12 form-group">
            <MatCheckbox @bind-Value="OfferModel.LastThreeYearsInjuryKnowledge" Label="@("OfferModel.LostHistoryForTheLastThreeYears".Translate() + "*")" Outlined="true" Disabled="ReadOnly"></MatCheckbox>
            <ValidationMessage For="@(() => OfferModel.LastThreeYearsInjuryKnowledge)" />
        </div>


        @if (OfferModel.LastThreeYearsInjuryKnowledge)
        {
            <div class="col-12 form-group">
                @if (ReadOnly)
                {
                    <div class="readonly-input">
                        <span>
                            <span>@("OfferModel.LostHistoryForTheLastThreeYears".Translate())</span>
                            <strong>@OfferModel.LastThreeYearsInjuryKnowledgeYes</strong>
                        </span>
                    </div>
                }
                else
                {
                    <TextArea class="form-control" placeholder="@("OfferModel.LostHistoryForTheLastThreeYears".Translate() + "*")" cols="20" rows="10" @bind-Value="OfferModel.LastThreeYearsInjuryKnowledgeYes"></TextArea>
                    <ValidationMessage For="@(() => OfferModel.LastThreeYearsInjuryKnowledgeYes)" />
                }
            </div>
        }
        <div class="col-12 form-group">
            <MatCheckbox @bind-Value="OfferModel.AnyInjuryKnowledge" Label="@("OfferModel.AnyInjuryKnowledge".Translate() + "*")" Outlined="true" Disabled="ReadOnly"></MatCheckbox>
            <ValidationMessage For="@(() => OfferModel.AnyInjuryKnowledge)" />
        </div>
        @if (OfferModel.AnyInjuryKnowledge == true)
        {
            <div class="col-12 form-group">
                @if (ReadOnly)
                {
                    <div class="readonly-input">
                        <span>
                            <span>@("OfferModel.Injuries".Translate())</span>
                            <strong>@OfferModel.Injuries</strong>
                        </span>
                    </div>
                }
                else
                {
                    <TextArea class="form-control" rows="10" cols="30" @bind-Value="OfferModel.Injuries"></TextArea>
                    <ValidationMessage For="@(() => OfferModel.Injuries)" />
                }
            </div>
        }


    </div>
    <CardComponent Header="@(LocalizationExtension.Translate("OfferModel.BenchFullDescription"))" HeaderIconClass="">
        <div class="row">
            <div class="col-3 form-group">
                @if (ReadOnly)
                {
                    <div class="readonly-input">
                        <span>
                            <span>@("OfferModel.Unit".Translate())</span>
                            <strong>@OfferModel.Unit</strong>
                        </span>
                    </div>
                }
                else
                {
                    <MatTextField @bind-Value="OfferModel.Unit" Label="@("OfferModel.Unit".Translate() + "*")" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                    <ValidationMessage For="@(() => OfferModel.Unit)" />
                }
            </div>
            <div class="col-3 form-group">
                @if (ReadOnly)
                {
                    <div class="readonly-input">
                        <span>
                            <span>@("OfferModel.Year".Translate())</span>
                            <strong>@OfferModel.Year</strong>
                        </span>
                    </div>
                }
                else
                {
                    <MatTextField @bind-Value="OfferModel.Year" Label="@("OfferModel.Year".Translate() + "*")" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                    <ValidationMessage For="@(() => OfferModel.Year)" />
                }
            </div>
            <div class="col-3 form-group">
                @if (ReadOnly)
                {
                    <div class="readonly-input">
                        <span>
                            <span>@("OfferModel.ReplacementCost".Translate())</span>
                            <strong>@OfferModel.ReplacementCost</strong>
                        </span>
                    </div>
                }
                else
                {
                    <MatTextField @bind-Value="OfferModel.ReplacementCost" Label="@("OfferModel.ReplacementCost".Translate() + "*")" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                    <ValidationMessage For="@(() => OfferModel.ReplacementCost)" />
                }
            </div>
            <div class="col-3 form-group">
                @if (ReadOnly)
                {
                    <div class="readonly-input">
                        <span>
                            <span>@("OfferModel.CustomsExpenses".Translate())</span>
                            <strong>@OfferModel.CustomsExpenses</strong>
                        </span>
                    </div>
                }
                else
                {
                    <MatTextField @bind-Value="OfferModel.CustomsExpenses" Label="@("OfferModel.CustomsExpenses".Translate() + "*")" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                    <ValidationMessage For="@(() => OfferModel.CustomsExpenses)" />
                }
            </div>
            <div class="col-3 form-group">
                @if (ReadOnly)
                {
                    <div class="readonly-input">
                        <span>
                            <span>@("OfferModel.PackagingExpenses".Translate())</span>
                            <strong>@OfferModel.PackagingExpenses</strong>
                        </span>
                    </div>
                }
                else
                {
                    <MatTextField @bind-Value="OfferModel.PackagingExpenses" Label="@("OfferModel.PackagingExpenses".Translate() )" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                    <ValidationMessage For="@(() => OfferModel.PackagingExpenses)" />
                }
            </div>
            <div class="col-3 form-group">
                @if (ReadOnly)
                {
                    <div class="readonly-input">
                        <span>
                            <span>@("OfferModel.CurrentPrice".Translate())</span>
                            <strong>@OfferModel.CurrentPrice</strong>
                        </span>
                    </div>
                }
                else
                {
                    <MatTextField @bind-Value="OfferModel.CurrentPrice" Label="@("OfferModel.CurrentPrice".Translate() )" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                    <ValidationMessage For="@(() => OfferModel.CurrentPrice)" />
                }
            </div>
            <div class="col-3 form-group">
                @if (ReadOnly)
                {
                    <div class="readonly-input">
                        <span>
                            <span>@("OfferModel.ManufacturerName".Translate())</span>
                            <strong>@OfferModel.ManufacturerName</strong>
                        </span>
                    </div>
                }
                else
                {
                    <MatTextField @bind-Value="OfferModel.ManufacturerName" Label="@("OfferModel.ManufacturerName".Translate() + "*")" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                    <ValidationMessage For="@(() => OfferModel.ManufacturerName)" />
                }
            </div>
            <div class="col-3 form-group">
                @if (ReadOnly)
                {
                    <div class="readonly-input">
                        <span>
                            <span>@("OfferModel.Series".Translate())</span>
                            <strong>@OfferModel.Series</strong>
                        </span>
                    </div>
                }
                else
                {
                    <MatTextField @bind-Value="OfferModel.Series" Label="@("OfferModel.Series".Translate() + "*")" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                    <ValidationMessage For="@(() => OfferModel.Series)" />
                }
            </div>
            <div class="col-3 form-group">
                @if (ReadOnly)
                {
                    <div class="readonly-input">
                        <span>
                            <span>@("OfferModel.Type".Translate())</span>
                            <strong>@OfferModel.Type</strong>
                        </span>
                    </div>
                }
                else
                {
                    <MatTextField @bind-Value="OfferModel.Type" Label="@("OfferModel.Type".Translate() + "*")" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                    <ValidationMessage For="@(() => OfferModel.Type)" />
                }
            </div>
            <div class="col-3 form-group">
                @if (ReadOnly)
                {
                    <div class="readonly-input">
                        <span>
                            <span>@("OfferModel.Voltage".Translate())</span>
                            <strong>@OfferModel.Voltage</strong>
                        </span>
                    </div>
                }
                else
                {
                    <MatTextField @bind-Value="OfferModel.Voltage" Label="@("OfferModel.Voltage".Translate() + "*")" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                    <ValidationMessage For="@(() => OfferModel.Voltage)" />
                }
            </div>
            <div class="col-3 form-group">
                @if (ReadOnly)
                {
                    <div class="readonly-input">
                        <span>
                            <span>@("OfferModel.Power".Translate())</span>
                            <strong>@OfferModel.Power</strong>
                        </span>
                    </div>
                }
                else
                {
                    <MatTextField @bind-Value="OfferModel.Power" Label="@("OfferModel.Power".Translate() + "*")" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                    <ValidationMessage For="@(() => OfferModel.Power)" />
                }
            </div>

        </div>
    </CardComponent>
</EditForm>
<div style="display:none">
    <CRM.Client.Shared.Components.PrintOut.Offers.BenchPrintOut DealModel="DealModel" OfferModel="OfferModel"></CRM.Client.Shared.Components.PrintOut.Offers.BenchPrintOut>
</div>

