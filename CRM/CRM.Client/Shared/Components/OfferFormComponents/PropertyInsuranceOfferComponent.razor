@inherits BaseComponent

<EditForm EditContext="EditContext">
    <ObjectGraphDataAnnotationsValidator />
    <div class="card-search">
        <CardComponent Header="@("Client.Beneficiary".Translate())" HeaderIconClass="">
            <ClientSearchComponent ClientSelected="@(BeneficiarySelected)" ClientFromParameter="@OfferModel.Beneficiary" ReadOnly="ReadOnly"></ClientSearchComponent>
            <ValidationMessage For="@(() => OfferModel.Beneficiary)" />
        </CardComponent>
    </div>
    <br />
    <div class="row">
        <div class="col-3 form-group @(ReadOnly ? "readonly-dropdown" : "")">
            <DropDownComponent ItemExpression="@(() => OfferModel.PolicyPeriodOid)" Parent="OfferModel" OnSelected="StateHasChanged" ReadOnly="ReadOnly"></DropDownComponent>
            <ValidationMessage For="@(() => OfferModel.PolicyPeriodOid)" />
        </div>
        <div class="col-3 form-group @(ReadOnly ? "readonly-dropdown" : "")">
            <DropDownComponent ItemExpression="@(() => OfferModel.CurrencyOid)" Parent="OfferModel" OnSelected="StateHasChanged" ReadOnly="ReadOnly"></DropDownComponent>
            <ValidationMessage For="@(() => OfferModel.CurrencyOid)" />
        </div>
        <div class="col-3 form-group @(ReadOnly ? "readonly-dropdown" : "")">
            <DropDownComponent ItemExpression="@(() => OfferModel.PaymentTypeOid)" Parent="OfferModel" OnSelected="StateHasChanged" ReadOnly="ReadOnly"></DropDownComponent>
            <ValidationMessage For="@(() => OfferModel.PaymentTypeOid)" />
        </div>
        <div class="col-3 form-group">
            @if (ReadOnly)
            {
                <div class="readonly-input">
                    <span>
                        <span>@("OfferModel.Commission".Translate())</span>
                        <strong>@OfferModel.Commission</strong>
                    </span>
                </div>
            }
            else
            {
                <MatTextField @bind-Value="OfferModel.Commission" Label="@("OfferModel.Commission".Translate() + "*")" Outlined="true" ReadOnly="ReadOnly" ValidationDisabled="true"></MatTextField>
                <ValidationMessage For="@(() => OfferModel.Commission)" />
            }
        </div>
        <div class="col-3 form-group">
            @if (ReadOnly)
            {
                <div class="readonly-input">
                    <span>
                        <span>@("OfferModel.ImmovablePropertyInsuranceAmount".Translate())</span>
                        <strong>@OfferModel.ImmovablePropertyInsuranceAmount</strong>
                    </span>
                </div>
            }
            else
            {
                <MatTextField @bind-Value="OfferModel.ImmovablePropertyInsuranceAmount" Label="@("OfferModel.ImmovablePropertyInsuranceAmount".Translate() + "*")" Outlined="true" ReadOnly="ReadOnly" ValidationDisabled="true"></MatTextField>
                <ValidationMessage For="@(() => OfferModel.ImmovablePropertyInsuranceAmount)" />
            }
        </div>
        <div class="col-3 form-group">
            @if (ReadOnly)
            {
                <div class="readonly-input">
                    <span>
                        <span>@("OfferModel.ImmovablePropertyValue".Translate())</span>
                        <strong>@OfferModel.ImmovablePropertyValue</strong>
                    </span>
                </div>
            }
            else
            {
                <MatTextField @bind-Value="OfferModel.ImmovablePropertyValue" Label="@("OfferModel.ImmovablePropertyValue".Translate())" Outlined="true" ReadOnly="ReadOnly" ValidationDisabled="true"></MatTextField>
                <ValidationMessage For="@(() => OfferModel.ImmovablePropertyValue)" />
            }
        </div>
        <div class="col-3 form-group">
            @if (ReadOnly)
            {
                <div class="readonly-input">
                    <span>
                        <span>@("OfferModel.MovablePropertyInsuranceAmount".Translate())</span>
                        <strong>@OfferModel.MovablePropertyInsuranceAmount</strong>
                    </span>
                </div>
            }
            else
            {
                <MatTextField @bind-Value="OfferModel.MovablePropertyInsuranceAmount" Label="@("OfferModel.MovablePropertyInsuranceAmount".Translate() + "*")" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                <ValidationMessage For="@(() => OfferModel.MovablePropertyInsuranceAmount)" />
            }
        </div>
        <div class="col-3 form-group">
            @if (ReadOnly)
            {
                <div class="readonly-input">
                    <span>
                        <span>@("OfferModel.MovablePropertyValue".Translate())</span>
                        <strong>@OfferModel.MovablePropertyValue</strong>
                    </span>
                </div>
            }
            else
            {
                <MatTextField @bind-Value="OfferModel.MovablePropertyValue" Label="@("OfferModel.MovablePropertyValue".Translate())" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                <ValidationMessage For="@(() => OfferModel.MovablePropertyValue)" />
            }
        </div>
        @if (DealModel?.Client?.ClientType == ClientType.Company)
        {
            <div class="col-3 form-group">
                @if (ReadOnly)
                {
                    <div class="readonly-input">
                        <span>
                            <span>@("OfferModel.CompanyActivityType".Translate())</span>
                            <strong>@OfferModel.CompanyActivityType</strong>
                        </span>
                    </div>
                }
                else
                {
                    <MatTextField @bind-Value="OfferModel.CompanyActivityType" Label="@("OfferModel.CompanyActivityType".Translate())" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                    <ValidationMessage For="@(() => OfferModel.CompanyActivityType)" />
                }
            </div>
        }

        <div class="col-3 form-group @(ReadOnly ? "readonly-dropdown" : "")">
            <DropDownComponent Required="true" ItemExpression="@(() => OfferModel.InsuranceTypeOid)" Parent="OfferModel" OnSelected="StateHasChanged" ReadOnly="ReadOnly"></DropDownComponent>
            <ValidationMessage For="@(() => OfferModel.InsuranceTypeOid)" />
        </div>
        <div class="col-3 form-group">
            @if (ReadOnly)
            {
                <div class="readonly-input">
                    <span>
                        <span>@("OfferModel.InsuranceArea".Translate())</span>
                        <strong>@OfferModel.InsuranceArea</strong>
                    </span>
                </div>
            }
            else
            {
                <MatTextField @bind-Value="OfferModel.InsuranceArea" Label="@("OfferModel.InsuranceArea".Translate() + "*")" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                <ValidationMessage For="@(() => OfferModel.InsuranceArea)" />
            }
        </div>

        <div class="col-3 form-group @(ReadOnly ? "readonly-dropdown" : "")">
            <DropDownComponent ItemExpression="@(() => OfferModel.InsuranceAreaType)" Parent="OfferModel" OnSelected="StateHasChanged" ReadOnly="ReadOnly"></DropDownComponent>
            <ValidationMessage For="@(() => OfferModel.InsuranceAreaType)" />
        </div>
        <div class="col-3 form-group">
            @if (ReadOnly)
            {
                <div class="readonly-input">
                    <span>
                        <span>@("OfferModel.LostHistoryForTheLastFiveYears".Translate())</span>
                        <strong>@OfferModel.LostHistoryForTheLastFiveYears</strong>
                    </span>
                </div>
            }
            else
            {
                <MatTextField @bind-Value="OfferModel.LostHistoryForTheLastFiveYears" Label="@("OfferModel.LostHistoryForTheLastFiveYears".Translate() + "*")" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                <ValidationMessage For="@(() => OfferModel.LostHistoryForTheLastFiveYears)" />
            }
        </div>
        <div class="col-3 form-group">
            @if (ReadOnly)
            {
                <div class="readonly-input">
                    <span>
                        <span>@("OfferModel.SecurityAndFirefightingSystemInfo".Translate())</span>
                        <strong>@OfferModel.SecurityAndFirefightingSystemInfo</strong>
                    </span>
                </div>
            }
            else
            {
                <MatTextField @bind-Value="OfferModel.SecurityAndFirefightingSystemInfo" Label="@("*" + "OfferModel.SecurityAndFirefightingSystemInfo".Translate())" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                <ValidationMessage For="@(() => OfferModel.SecurityAndFirefightingSystemInfo)" />
            }
        </div>
        <div class="col-3 form-group @(ReadOnly ? "readonly-dropdown" : "")">
            <DropDownComponent Required="true" ItemExpression="@(() => OfferModel.ImmovablePropertyTypeOid)" Parent="OfferModel" OnSelected="StateHasChanged" ReadOnly="ReadOnly"></DropDownComponent>
            <ValidationMessage For="@(() => OfferModel.ImmovablePropertyTypeOid)" />
        </div>
        @if (OfferModel.ImmovablePropertyTypeOid == 2)
        {
            <div class="col-3 form-group">
                @if (ReadOnly)
                {
                    <div class="readonly-input">
                        <span>
                            <span>@("DropDown.ImmovablePropertyTypeOther".Translate())</span>
                            <strong>@OfferModel.ImmovablePropertyTypeOther</strong>
                        </span>
                    </div>
                }
                else
                {
                    <MatTextField @bind-Value="OfferModel.ImmovablePropertyTypeOther" Label="@("DropDown.ImmovablePropertyTypeOther".Translate())" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                    <ValidationMessage For="@(() => OfferModel.ImmovablePropertyTypeOther)" />
                }
            </div>
        }

        <div class="col-3 form-group @(ReadOnly ? "readonly-dropdown" : "")">
            <DropDownComponent Required="true" ItemExpression="@(() => OfferModel.MovablePropertyTypeOid)" Parent="OfferModel" OnSelected="StateHasChanged" ReadOnly="ReadOnly"></DropDownComponent>
            <ValidationMessage For="@(() => OfferModel.MovablePropertyTypeOid)" />
        </div>


        @if (OfferModel.MovablePropertyTypeOid == 5)
        {
            <div class="col-3 form-group">
                @if (ReadOnly)
                {
                    <div class="readonly-input">
                        <span>
                            <span>@("OfferModel.MovablePropertyTypeOther".Translate())</span>
                            <strong>@OfferModel.MovablePropertyTypeOther</strong>
                        </span>
                    </div>
                }
                else
                {
                    <MatTextField @bind-Value="OfferModel.MovablePropertyTypeOther" Label="@("DropDown.MovablePropertyTypeOther".Translate())" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                    <ValidationMessage For="@(() => OfferModel.MovablePropertyTypeOther)" />
                }
            </div>
        }

        <div class="col-3 form-group">
            @if (ReadOnly)
            {
                <div class="readonly-input">
                    <span>
                        <span>@("OfferModel.InsurancePredmetAddress".Translate())</span>
                        <strong>@OfferModel.InsurancePredmetAddress</strong>
                    </span>
                </div>
            }
            else
            {
                <MatTextField @bind-Value="OfferModel.InsurancePredmetAddress" Label="@("OfferModel.InsurancePredmetAddress".Translate() + "*")" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                <ValidationMessage For="@(() => OfferModel.InsurancePredmetAddress)" />
            }
        </div>

        <div class="col-3 form-group">
            @if (ReadOnly)
            {
                <div class="readonly-input">
                    <span>
                        <span>@("OfferModel.AnyUsefulInfoForInsuranceCompany".Translate())</span>
                        <strong>@OfferModel.AnyUsefulInfoForInsuranceCompany</strong>
                    </span>
                </div>
            }
            else
            {
                <MatTextField @bind-Value="OfferModel.AnyUsefulInfoForInsuranceCompany" Label="@("OfferModel.AnyUsefulInfoForInsuranceCompany".Translate() + "*")" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                <ValidationMessage For="@(() => OfferModel.AnyUsefulInfoForInsuranceCompany)" />
            }
        </div>


        <div class="col-12 form-group">
            @if (ReadOnly)
            {
                <div class="readonly-input">
                    <span>
                        <span>@("OfferModel.SpecialConditions".Translate())</span>
                        @if (OfferModel.SpecialConditions)
                        {
                            <strong>@("OfferModel.Yes".Translate())</strong>
                        }
                        else
                        {
                            <strong>@("OfferModel.No".Translate())</strong>
                        }
                    </span>
                </div>
            }
            else
            {
                <MatCheckbox @bind-Value="OfferModel.SpecialConditions" Label="@("OfferModel.SpecialConditions".Translate())" Outlined="true" Disabled="ReadOnly"></MatCheckbox>
                <ValidationMessage For="@(() => OfferModel.SpecialConditions)" />
            }
        </div>


        @if (OfferModel.SpecialConditions)
        {
            <div class="col-12 form-group">
                @if (ReadOnly)
                {
                    <div class="readonly-input">
                        <span>
                            <span>@("OfferModel.SpecialConditionsYes".Translate())</span>
                            <strong>@OfferModel.SpecialConditionsYes</strong>
                        </span>
                    </div>
                }
                else
                {
                    <MatTextField @bind-Value="OfferModel.SpecialConditionsYes" Label="@("OfferModel.SpecialConditionsYes".Translate())" Outlined="true" Disabled="ReadOnly"></MatTextField>
                    <ValidationMessage For="@(() => OfferModel.SpecialConditionsYes)" />
                }
            </div>
        }

        <div class="col-12 form-group" style="max-height: 56px">
            <MatCheckbox @bind-Value="OfferModel.IsRenew" Label="@("OfferModel.IsRenew".Translate())" Outlined="true" Disabled="ReadOnly"></MatCheckbox>
        </div>
        @if (OfferModel.IsRenew)
        {
            <div class="col-12 form-group">
                @if (ReadOnly)
                {
                    <div class="readonly-input">
                        <span>
                            <span>@("PolicyNumber".Translate())</span>
                            <strong>@OfferModel.ExistingPolicyNumber</strong>
                        </span>
                    </div>
                }
                else
                {
                    <MatTextField @bind-Value="OfferModel.ExistingPolicyNumber" Label="@("PolicyNumber".Translate())" Outlined="true" ReadOnly="ReadOnly"></MatTextField>
                    <ValidationMessage For="@(() => OfferModel.ExistingPolicyNumber)" />
                }
            </div>
        }
    </div>
    <br />
</EditForm>



<div style="display:none">
    <CRM.Client.Shared.Components.PrintOut.Offers.PropertyPrintOut DealModel="DealModel" OfferModel="OfferModel"></CRM.Client.Shared.Components.PrintOut.Offers.PropertyPrintOut>
    </div>